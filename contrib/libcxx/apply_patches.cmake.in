################################################################################
# Copyright (c) 2019, Devin Nakamura
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# SPDX-License-Identifier: BSD-2-Clause
################################################################################

# script for applying patches to libcxx
set(Patch_EXECUTABLE "@Patch_EXECUTABLE@")
set(patches "@patches@")
set(tmp_dir "@tmp_dir@")
set(patch_stamp "@patch_stamp@")
set(extract_source_dir "@extract_source_dir@")

set(source_dir "@source_dir@")

file(REMOVE_RECURSE "${source_dir}")
file(COPY "${extract_source_dir}" DESTINATION "@CMAKE_CURRENT_BINARY_DIR@") # TODO relies on knowledge of extract_src_dir

foreach(patch IN LISTS patches)
	execute_process(
		COMMAND "${Patch_EXECUTABLE}" -N  -p1
		INPUT_FILE "${patch}"
		WORKING_DIRECTORY "${source_dir}"
		RESULT_VARIABLE patch_rc
	)
	if(NOT "${patch_rc}" EQUAL 0)
		file(REMOVE_RECURSE "${source_dir}")
		message(SEND_ERROR "Failed to apply libcxx patch '${patch}' (${patch_rc})")
		return(1)
	endif()
endforeach()


file(TOUCH "${patch_stamp}")
	